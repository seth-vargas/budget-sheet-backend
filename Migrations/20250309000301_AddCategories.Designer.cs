// <auto-generated />
using System;
using BudgetSheetApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetSheetApi.Migrations
{
    [DbContext(typeof(BudgetSheetContext))]
    [Migration("20250309000301_AddCategories")]
    partial class AddCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BudgetSheetApi.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "None"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bill"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dining Out"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gas"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Hair Cut"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Home School"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Loan Payment"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Medical Payment"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Overdraft"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Pet"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Savings"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Shopping"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Subscription"
                        });
                });

            modelBuilder.Entity("BudgetSheetApi.Data.Entities.CategoryAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryAssignments");
                });

            modelBuilder.Entity("BudgetSheetApi.Data.Entities.FrostTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BudgetSheetApi.Data.Entities.CategoryAssignment", b =>
                {
                    b.HasOne("BudgetSheetApi.Data.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BudgetSheetApi.Data.Entities.FrostTransaction", b =>
                {
                    b.HasOne("BudgetSheetApi.Data.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BudgetSheetApi.Data.Entities.Category", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
